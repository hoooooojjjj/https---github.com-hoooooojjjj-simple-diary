{"ast":null,"code":"var _jsxFileName = \"/Users/ryuhojun/Documents/simple-diary/src/OptimizeTest.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// React.memo를 사용하면 컴포넌트가 받는 props만 바뀔 때 컴포넌트가 렌더링되어 성능 최적화!\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterA = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(({\n  count\n}) => {\n  _s();\n  useEffect(() => {\n    console.log({\n      count\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n// 하지만 props가 객체일 경우 그냥 React.memo를 사용하면 안되고, 비교함수를 사용해야 한다.\n// 1. 컴포넌트를 하나 기본적으로 만들고\n_c2 = CounterA;\nconst CounterB = ({\n  obj\n}) => {\n  _s2();\n  useEffect(() => {\n    console.log(obj.count);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: obj.count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n// 2. 비교함수를 생성\n_s2(CounterB, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = CounterB;\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.obj.count === nextProps.obj.count;\n};\n// 3. 새로운 컴포넌트를 만듦(고차 컴포넌트) -> 이를 상위 컴포넌트로 임폴트함.\nconst MemoizedCounterB = /*#__PURE__*/React.memo(CounterB, areEqual);\n_c4 = MemoizedCounterB;\nconst OptimizeTest = () => {\n  _s3();\n  const [count, setcount] = useState(1);\n  const [obj, setobj] = useState({\n    count: 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"counter A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterA, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setcount(count);\n        },\n        children: \"A button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"counter B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MemoizedCounterB, {\n        obj: obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setobj({\n            count: obj.count\n          });\n        },\n        children: \"B button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s3(OptimizeTest, \"p8bZX8HALbSSjiycr+oKiGPT8OQ=\");\n_c5 = OptimizeTest;\nexport default OptimizeTest;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CounterA$React.memo\");\n$RefreshReg$(_c2, \"CounterA\");\n$RefreshReg$(_c3, \"CounterB\");\n$RefreshReg$(_c4, \"MemoizedCounterB\");\n$RefreshReg$(_c5, \"OptimizeTest\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CounterA","_s","memo","_c","count","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","CounterB","obj","_s2","_c3","areEqual","prevProps","nextProps","MemoizedCounterB","_c4","OptimizeTest","_s3","setcount","setobj","style","padding","onClick","_c5","$RefreshReg$"],"sources":["/Users/ryuhojun/Documents/simple-diary/src/OptimizeTest.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// React.memo를 사용하면 컴포넌트가 받는 props만 바뀔 때 컴포넌트가 렌더링되어 성능 최적화!\nconst CounterA = React.memo(({ count }) => {\n  useEffect(() => {\n    console.log({ count });\n  });\n  return <div>{count}</div>;\n});\n\n// 하지만 props가 객체일 경우 그냥 React.memo를 사용하면 안되고, 비교함수를 사용해야 한다.\n// 1. 컴포넌트를 하나 기본적으로 만들고\nconst CounterB = ({ obj }) => {\n  useEffect(() => {\n    console.log(obj.count);\n  });\n  return <div>{obj.count}</div>;\n};\n// 2. 비교함수를 생성\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.obj.count === nextProps.obj.count;\n};\n// 3. 새로운 컴포넌트를 만듦(고차 컴포넌트) -> 이를 상위 컴포넌트로 임폴트함.\nconst MemoizedCounterB = React.memo(CounterB, areEqual);\n\nconst OptimizeTest = () => {\n  const [count, setcount] = useState(1);\n  const [obj, setobj] = useState({\n    count: 1,\n  });\n  return (\n    <div style={{ padding: 50 }}>\n      <div>\n        <h2>counter A</h2>\n        <CounterA count={count} />\n        <button\n          onClick={() => {\n            setcount(count);\n          }}\n        >\n          A button\n        </button>\n      </div>\n      <div>\n        <h2>counter B</h2>\n        <MemoizedCounterB obj={obj} />\n        <button\n          onClick={() => {\n            setobj({\n              count: obj.count,\n            });\n          }}\n        >\n          B button\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizeTest;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}