{"ast":null,"code":"var _jsxFileName = \"/Users/ryuhojun/Documents/simple-diary/src/DiaryItem.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryItem = ({\n  author,\n  content,\n  emotion,\n  created_date,\n  id,\n  onRemove,\n  onEdit\n}) => {\n  _s();\n  const editTextarea = useRef();\n  const [localContent, setlocalContent] = useState(content); // textarea의 value를 상태로 만듦. 입력값은 항상 state로 관리\n\n  const [isEdit, setisEdit] = useState(false); // 모든 토글 기능은 이렇게 처리하자\n  const toggleisEdit = () => {\n    setisEdit(!isEdit);\n  };\n  const handleEdit = () => {\n    if (localContent.length < 5) {\n      editTextarea.current.focus();\n      return;\n    }\n    if (window.confirm(\"일기를 수정하시겠습니까?\")) {\n      onEdit(id, localContent); // 배열 수정 함수 호출\n    } else {\n      setlocalContent(content);\n    }\n    toggleisEdit();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uC791\\uC131\\uC790 : \", author, \" | \\uAC10\\uC815 \\uC810\\uC218 : \", emotion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: new Date(created_date).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: editTextarea,\n          value: localContent,\n          className: \"content\",\n          onChange: e => {\n            setlocalContent(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            toggleisEdit();\n            setlocalContent(content);\n          },\n          children: \"\\uB3CC\\uC544\\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (window.confirm(\"정말 일기를 삭제하시겠습니까?\")) {\n              onRemove(id);\n            }\n          },\n          children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleisEdit,\n          children: \"\\uC218\\uC815\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryItem, \"oIvNYXLJsSToUscIkwU7uDm0fQw=\");\n_c = DiaryItem;\nexport default _c2 = /*#__PURE__*/React.memo(DiaryItem);\nvar _c, _c2;\n$RefreshReg$(_c, \"DiaryItem\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","DiaryItem","author","content","emotion","created_date","id","onRemove","onEdit","_s","editTextarea","localContent","setlocalContent","isEdit","setisEdit","toggleisEdit","handleEdit","length","current","focus","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleString","ref","value","onChange","e","target","onClick","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/ryuhojun/Documents/simple-diary/src/DiaryItem.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\nconst DiaryItem = ({\n  author,\n  content,\n  emotion,\n  created_date,\n  id,\n  onRemove,\n  onEdit,\n}) => {\n  const editTextarea = useRef();\n  const [localContent, setlocalContent] = useState(content); // textarea의 value를 상태로 만듦. 입력값은 항상 state로 관리\n\n  const [isEdit, setisEdit] = useState(false); // 모든 토글 기능은 이렇게 처리하자\n  const toggleisEdit = () => {\n    setisEdit(!isEdit);\n  };\n\n  const handleEdit = () => {\n    if (localContent.length < 5) {\n      editTextarea.current.focus();\n      return;\n    }\n    if (window.confirm(\"일기를 수정하시겠습니까?\")) {\n      onEdit(id, localContent); // 배열 수정 함수 호출\n    } else {\n      setlocalContent(content);\n    }\n    toggleisEdit();\n  };\n\n  return (\n    <div className=\"DiaryItem\">\n      <div className=\"info\">\n        <span>\n          작성자 : {author} | 감정 점수 : {emotion}\n        </span>\n        <br />\n        <span className=\"date\">{new Date(created_date).toLocaleString()}</span>\n      </div>\n      {isEdit ? (\n        <div>\n          <div>\n            <textarea\n              ref={editTextarea}\n              value={localContent}\n              className=\"content\"\n              onChange={(e) => {\n                setlocalContent(e.target.value);\n              }}\n            ></textarea>\n          </div>\n          <span>\n            <button\n              onClick={() => {\n                toggleisEdit();\n                setlocalContent(content);\n              }}\n            >\n              돌아가기\n            </button>\n          </span>\n          <span>\n            <button onClick={handleEdit}>저장하기</button>\n          </span>{\" \"}\n        </div>\n      ) : (\n        <div>\n          <div className=\"content\">{content}</div>\n          <span>\n            <button\n              onClick={() => {\n                if (window.confirm(\"정말 일기를 삭제하시겠습니까?\")) {\n                  onRemove(id);\n                }\n              }}\n            >\n              삭제하기\n            </button>\n          </span>\n          <span>\n            <button onClick={toggleisEdit}>수정하기</button>\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(DiaryItem);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}