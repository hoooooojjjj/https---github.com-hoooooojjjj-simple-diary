{"ast":null,"code":"var _jsxFileName = \"/Users/ryuhojun/Documents/simple-diary/src/DiaryItem.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiaryItem = ({\n  author,\n  content,\n  emotion,\n  created_date,\n  id,\n  onRemove,\n  onEdit\n}) => {\n  _s();\n  const editTextarea = useRef();\n  const [isEdit, setisEdit] = useState(false); // 모든 토글 기능은 이렇게 처리하자\n  const toggleisEdit = () => {\n    setisEdit(!isEdit);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uC791\\uC131\\uC790 : \", author, \" | \\uAC10\\uC815 \\uC810\\uC218 : \", emotion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: new Date(created_date).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), isEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: editTextarea,\n          defaultValue: content,\n          className: \"content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleisEdit,\n          children: \"\\uC218\\uC815 \\uCDE8\\uC18C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            toggleisEdit();\n            onEdit(id, editTextarea.current.value); // 배열 수정 함수 호출\n          },\n          children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (window.confirm(\"정말 일기를 삭제하시겠습니까?\")) {\n              onRemove(id);\n            }\n          },\n          children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleisEdit,\n          children: \"\\uC218\\uC815\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryItem, \"0GMfPyadPSnef1aZo5K6H9xOkas=\");\n_c = DiaryItem;\nexport default DiaryItem;\nvar _c;\n$RefreshReg$(_c, \"DiaryItem\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","DiaryItem","author","content","emotion","created_date","id","onRemove","onEdit","_s","editTextarea","isEdit","setisEdit","toggleisEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleString","ref","defaultValue","onClick","current","value","window","confirm","_c","$RefreshReg$"],"sources":["/Users/ryuhojun/Documents/simple-diary/src/DiaryItem.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nconst DiaryItem = ({\n  author,\n  content,\n  emotion,\n  created_date,\n  id,\n  onRemove,\n  onEdit,\n}) => {\n  const editTextarea = useRef();\n\n  const [isEdit, setisEdit] = useState(false); // 모든 토글 기능은 이렇게 처리하자\n  const toggleisEdit = () => {\n    setisEdit(!isEdit);\n  };\n\n  return (\n    <div className=\"DiaryItem\">\n      <div className=\"info\">\n        <span>\n          작성자 : {author} | 감정 점수 : {emotion}\n        </span>\n        <br />\n        <span className=\"date\">{new Date(created_date).toLocaleString()}</span>\n      </div>\n      {isEdit ? (\n        <div>\n          <div>\n            <textarea\n              ref={editTextarea}\n              defaultValue={content}\n              className=\"content\"\n            ></textarea>\n          </div>\n          <span>\n            <button onClick={toggleisEdit}>수정 취소하기</button>\n          </span>\n          <span>\n            <button\n              onClick={() => {\n                toggleisEdit();\n                onEdit(id, editTextarea.current.value); // 배열 수정 함수 호출\n              }}\n            >\n              저장하기\n            </button>\n          </span>{\" \"}\n        </div>\n      ) : (\n        <div>\n          <div className=\"content\">{content}</div>\n          <span>\n            <button\n              onClick={() => {\n                if (window.confirm(\"정말 일기를 삭제하시겠습니까?\")) {\n                  onRemove(id);\n                }\n              }}\n            >\n              삭제하기\n            </button>\n          </span>\n          <span>\n            <button onClick={toggleisEdit}>수정하기</button>\n          </span>{\" \"}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DiaryItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}