{"ast":null,"code":"var _jsxFileName = \"/Users/ryuhojun/Documents/simple-diary/src/OptimizeTest.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// React.memo를 사용하면 컴포넌트가 받는 props만 바뀔 때 컴포넌트가 렌더링되어 성능 최적화!\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterA = /*#__PURE__*/React.memo(_c = ({\n  count\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n});\n_c2 = CounterA;\nconst CounterB = /*#__PURE__*/React.memo(_c3 = ({\n  obj\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: obj.count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n});\n_c4 = CounterB;\nconst OptimizeTest = () => {\n  _s();\n  const [count, setcount] = useState(1);\n  const [obj, setobj] = useState({\n    count: 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"counter A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterA, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setcount(count);\n        },\n        children: \"A button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"counter B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterB, {\n        obj: obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setobj({\n            count: obj.count\n          });\n        },\n        children: \"B button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(OptimizeTest, \"p8bZX8HALbSSjiycr+oKiGPT8OQ=\");\n_c5 = OptimizeTest;\nexport default OptimizeTest;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CounterA$React.memo\");\n$RefreshReg$(_c2, \"CounterA\");\n$RefreshReg$(_c3, \"CounterB$React.memo\");\n$RefreshReg$(_c4, \"CounterB\");\n$RefreshReg$(_c5, \"OptimizeTest\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CounterA","memo","_c","count","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","CounterB","_c3","obj","_c4","OptimizeTest","_s","setcount","setobj","style","padding","onClick","_c5","$RefreshReg$"],"sources":["/Users/ryuhojun/Documents/simple-diary/src/OptimizeTest.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// React.memo를 사용하면 컴포넌트가 받는 props만 바뀔 때 컴포넌트가 렌더링되어 성능 최적화!\nconst CounterA = React.memo(({ count }) => {\n  return <div>{count}</div>;\n});\nconst CounterB = React.memo(({ obj }) => {\n  return <div>{obj.count}</div>;\n});\nconst OptimizeTest = () => {\n  const [count, setcount] = useState(1);\n  const [obj, setobj] = useState({\n    count: 1,\n  });\n  return (\n    <div style={{ padding: 50 }}>\n      <div>\n        <h2>counter A</h2>\n        <CounterA count={count} />\n        <button\n          onClick={() => {\n            setcount(count);\n          }}\n        >\n          A button\n        </button>\n      </div>\n      <div>\n        <h2>counter B</h2>\n        <CounterB obj={obj} />\n        <button\n          onClick={() => {\n            setobj({\n              count: obj.count,\n            });\n          }}\n        >\n          B button\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizeTest;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}