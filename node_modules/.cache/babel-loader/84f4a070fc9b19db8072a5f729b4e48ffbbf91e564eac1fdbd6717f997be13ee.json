{"ast":null,"code":"var _jsxFileName = \"/Users/ryuhojun/Documents/simple-diary/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport DiaryEditor from \"./DiaryEdtor\";\nimport DiaryList from \"./DiaryList\";\nimport { useEffect, useState } from \"react\";\n// import Lifecycle from \"./Lifecycle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [diaryDatas, setdiaryDatas] = useState([]);\n  useEffect(() => {\n    const data = async () => {\n      await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res => {\n        return json(res);\n      });\n    };\n    console.log(data);\n  }, []);\n\n  // state 끌어올리기 -> 최상위 컴포넌트에서 이벤트가 발생하면 실행될 '함수'를 만들고 전달,\n  // 하위 컴포넌트에서 '이벤트'(->함수)를 현재 데이터를 인자로 전달하여 실행\n\n  // 배열 데이터 생성\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n\n    // 새로 들어갈 배열 요소\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: Date.now()\n    };\n    // diaryDatasId.current += 1;\n    setdiaryDatas([newItem, ...diaryDatas]); // [새로 들어갈 배열 요소, ...기존 요소들]\n  };\n\n  // 배열 삭제\n  const onRemove = targetId => {\n    const deleteData = diaryDatas.filter(data => {\n      return data.id !== targetId;\n    });\n    setdiaryDatas(deleteData);\n  };\n\n  // 배열 수정\n  const onEdit = (targetId, editContent) => {\n    const editdiaryDatas = diaryDatas.map(data => {\n      if (data.id === targetId) {\n        data.content = editContent;\n      }\n      return data;\n    });\n    setdiaryDatas(editdiaryDatas);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      diaryData: diaryDatas,\n      onRemove: onRemove,\n      onEdit: onEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2ln7sbUFYhI+OOuOJbZO3Kz+x40=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["DiaryEditor","DiaryList","useEffect","useState","jsxDEV","_jsxDEV","App","_s","diaryDatas","setdiaryDatas","data","fetch","then","res","json","console","log","onCreate","author","content","emotion","created_date","Date","getTime","newItem","id","now","onRemove","targetId","deleteData","filter","onEdit","editContent","editdiaryDatas","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","diaryData","_c","$RefreshReg$"],"sources":["/Users/ryuhojun/Documents/simple-diary/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport DiaryEditor from \"./DiaryEdtor\";\nimport DiaryList from \"./DiaryList\";\nimport { useEffect, useState } from \"react\";\n// import Lifecycle from \"./Lifecycle\";\n\nfunction App() {\n  const [diaryDatas, setdiaryDatas] = useState([]);\n  useEffect(() => {\n    const data = async () => {\n      await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(\n        (res) => {\n          return json(res);\n        }\n      );\n    };\n    console.log(data);\n  }, []);\n\n  // state 끌어올리기 -> 최상위 컴포넌트에서 이벤트가 발생하면 실행될 '함수'를 만들고 전달,\n  // 하위 컴포넌트에서 '이벤트'(->함수)를 현재 데이터를 인자로 전달하여 실행\n\n  // 배열 데이터 생성\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n\n    // 새로 들어갈 배열 요소\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: Date.now(),\n    };\n    // diaryDatasId.current += 1;\n    setdiaryDatas([newItem, ...diaryDatas]); // [새로 들어갈 배열 요소, ...기존 요소들]\n  };\n\n  // 배열 삭제\n  const onRemove = (targetId) => {\n    const deleteData = diaryDatas.filter((data) => {\n      return data.id !== targetId;\n    });\n    setdiaryDatas(deleteData);\n  };\n\n  // 배열 수정\n  const onEdit = (targetId, editContent) => {\n    const editdiaryDatas = diaryDatas.map((data) => {\n      if (data.id === targetId) {\n        data.content = editContent;\n      }\n      return data;\n    });\n    setdiaryDatas(editdiaryDatas);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <Lifecycle /> */}\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList diaryData={diaryDatas} onRemove={onRemove} onEdit={onEdit} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,WAAW,MAAM,cAAc;AACtC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChDD,SAAS,CAAC,MAAM;IACd,MAAMQ,IAAI,GAAG,MAAAA,CAAA,KAAY;MACvB,MAAMC,KAAK,CAAC,+CAA+C,CAAC,CAACC,IAAI,CAC9DC,GAAG,IAAK;QACP,OAAOC,IAAI,CAACD,GAAG,CAAC;MAClB,CACF,CAAC;IACH,CAAC;IACDE,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;;EAEA;EACA,MAAMO,QAAQ,GAAGA,CAACC,MAAM,EAAEC,OAAO,EAAEC,OAAO,KAAK;IAC7C,MAAMC,YAAY,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;;IAEzC;IACA,MAAMC,OAAO,GAAG;MACdN,MAAM;MACNC,OAAO;MACPC,OAAO;MACPC,YAAY;MACZI,EAAE,EAAEH,IAAI,CAACI,GAAG,CAAC;IACf,CAAC;IACD;IACAjB,aAAa,CAAC,CAACe,OAAO,EAAE,GAAGhB,UAAU,CAAC,CAAC,CAAC,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMmB,QAAQ,GAAIC,QAAQ,IAAK;IAC7B,MAAMC,UAAU,GAAGrB,UAAU,CAACsB,MAAM,CAAEpB,IAAI,IAAK;MAC7C,OAAOA,IAAI,CAACe,EAAE,KAAKG,QAAQ;IAC7B,CAAC,CAAC;IACFnB,aAAa,CAACoB,UAAU,CAAC;EAC3B,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAACH,QAAQ,EAAEI,WAAW,KAAK;IACxC,MAAMC,cAAc,GAAGzB,UAAU,CAAC0B,GAAG,CAAExB,IAAI,IAAK;MAC9C,IAAIA,IAAI,CAACe,EAAE,KAAKG,QAAQ,EAAE;QACxBlB,IAAI,CAACS,OAAO,GAAGa,WAAW;MAC5B;MACA,OAAOtB,IAAI;IACb,CAAC,CAAC;IACFD,aAAa,CAACwB,cAAc,CAAC;EAC/B,CAAC;EAED,oBACE5B,OAAA;IAAK8B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElB/B,OAAA,CAACL,WAAW;MAACiB,QAAQ,EAAEA;IAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCnC,OAAA,CAACJ,SAAS;MAACwC,SAAS,EAAEjC,UAAW;MAACmB,QAAQ,EAAEA,QAAS;MAACI,MAAM,EAAEA;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV;AAACjC,EAAA,CA1DQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}