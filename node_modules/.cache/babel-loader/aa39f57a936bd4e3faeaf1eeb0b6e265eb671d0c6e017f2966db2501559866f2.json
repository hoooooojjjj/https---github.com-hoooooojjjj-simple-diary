{"ast":null,"code":"var _jsxFileName = \"/Users/ryuhojun/Documents/simple-diary/src/Lifecycle.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Unmount = () => {\n  _s();\n  // *** Lifecycle 컴포넌트가 언마운트됐을 때 -> 화면에서 사라졌을 때\n  useEffect(() => {\n    console.log(\"Mount!\");\n    return () => {\n      console.log(\"unmount!\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"unmount testing component\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n};\n_s(Unmount, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Unmount;\nconst Lifecycle = () => {\n  _s2();\n  //   const [count, setcount] = useState(0);\n  //   const [text, settext] = useState(\"\");\n  const [isvisible, setisvisible] = useState(false);\n  const toggle = () => {\n    setisvisible(!isvisible);\n  };\n\n  //   // *** Lifecycle 컴포넌트가 마운트됐을 때 -> 화면에 생겼을 때\n  //   useEffect(() => {\n  //     console.log(\"Mount!\");\n  //   }, []); // 의존성 배열에 빈 배열을 전달하면 마운트됐을 때 함수 실행 가능\n\n  //   // *** Lifecycle 컴포넌트가 업데이트됐을 때 -> 리렌더링 됐을 때\n  //   useEffect(() => {\n  //     console.log(\"Update!\");\n  //   }); // 의존성 배열을 전달하지 않으면 업데이트 됐을 때 함수 실행 가능\n  //   useEffect(() => {\n  //     console.log(\"count Update!\");\n  //   }, [count]); // 의존성 배열에 특정 상태를 넣으면 그 상태로 인해\n  //   // 컴포넌트가 업데이트 됐을 때 함수 실행 가능\n  //   useEffect(() => {\n  //     console.log(\"text Update!\");\n  //   }, [text]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      children: \"on/off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), isvisible && /*#__PURE__*/_jsxDEV(Unmount, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s2(Lifecycle, \"+F0s6kZIbSadW4iXFJhocOza3g8=\");\n_c2 = Lifecycle;\nexport default Lifecycle;\nvar _c, _c2;\n$RefreshReg$(_c, \"Unmount\");\n$RefreshReg$(_c2, \"Lifecycle\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Unmount","_s","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Lifecycle","_s2","isvisible","setisvisible","toggle","style","padding","onClick","_c2","$RefreshReg$"],"sources":["/Users/ryuhojun/Documents/simple-diary/src/Lifecycle.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst Unmount = () => {\n  // *** Lifecycle 컴포넌트가 언마운트됐을 때 -> 화면에서 사라졌을 때\n  useEffect(() => {\n    console.log(\"Mount!\");\n    return () => {\n      console.log(\"unmount!\");\n    };\n  }, []);\n  return <div>unmount testing component</div>;\n};\n\nconst Lifecycle = () => {\n  //   const [count, setcount] = useState(0);\n  //   const [text, settext] = useState(\"\");\n  const [isvisible, setisvisible] = useState(false);\n  const toggle = () => {\n    setisvisible(!isvisible);\n  };\n\n  //   // *** Lifecycle 컴포넌트가 마운트됐을 때 -> 화면에 생겼을 때\n  //   useEffect(() => {\n  //     console.log(\"Mount!\");\n  //   }, []); // 의존성 배열에 빈 배열을 전달하면 마운트됐을 때 함수 실행 가능\n\n  //   // *** Lifecycle 컴포넌트가 업데이트됐을 때 -> 리렌더링 됐을 때\n  //   useEffect(() => {\n  //     console.log(\"Update!\");\n  //   }); // 의존성 배열을 전달하지 않으면 업데이트 됐을 때 함수 실행 가능\n  //   useEffect(() => {\n  //     console.log(\"count Update!\");\n  //   }, [count]); // 의존성 배열에 특정 상태를 넣으면 그 상태로 인해\n  //   // 컴포넌트가 업데이트 됐을 때 함수 실행 가능\n  //   useEffect(() => {\n  //     console.log(\"text Update!\");\n  //   }, [text]);\n\n  return (\n    <div style={{ padding: 20 }}>\n      {/* {count}\n      <button\n        onClick={() => {\n          setcount(count + 1);\n        }}\n      >\n        +\n      </button>\n      <button\n        onClick={() => {\n          setcount(count - 1);\n        }}\n      >\n        -\n      </button>\n      <div>\n        <input\n          value={text}\n          onChange={(e) => {\n            settext(e.target.value);\n          }}\n        />\n      </div> */}\n\n      <button onClick={toggle}>on/off</button>\n      {isvisible && <Unmount />}\n    </div>\n  );\n};\n\nexport default Lifecycle;\n"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACAL,SAAS,CAAC,MAAM;IACdM,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,OAAO,MAAM;MACXD,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,oBAAOJ,OAAA;IAAAK,QAAA,EAAK;EAAyB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC7C,CAAC;AAACP,EAAA,CATID,OAAO;AAAAS,EAAA,GAAPT,OAAO;AAWb,MAAMU,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACtB;EACA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMiB,MAAM,GAAGA,CAAA,KAAM;IACnBD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;;EAED;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEb,OAAA;IAAKgB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAZ,QAAA,gBAyB1BL,OAAA;MAAQkB,OAAO,EAAEH,MAAO;MAAAV,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvCI,SAAS,iBAAIb,OAAA,CAACC,OAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAACG,GAAA,CAvDID,SAAS;AAAAQ,GAAA,GAATR,SAAS;AAyDf,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}