{"ast":null,"code":"var _jsxFileName = \"/Users/ryuhojun/Documents/simple-diary/src/Lifecycle.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lifecycle = () => {\n  _s();\n  const [count, setcount] = useState(0);\n  const [text, settext] = useState(\"\");\n\n  // Lifecycle 컴포넌트가 마운트됐을 때 -> 화면에 생겼을 때\n  useEffect(() => {\n    console.log(\"Mount!\");\n  }, []); // 의존성 배열에 빈 배열을 전달하면 마운트됐을 때 함수 실행 가능\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setcount(count + 1);\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setcount(count - 1);\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => {\n          settext(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Lifecycle, \"3TXpPAIChb5yKvwv9vFtpYxa3lI=\");\n_c = Lifecycle;\nexport default Lifecycle;\nvar _c;\n$RefreshReg$(_c, \"Lifecycle\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Lifecycle","_s","count","setcount","text","settext","console","log","style","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/ryuhojun/Documents/simple-diary/src/Lifecycle.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst Lifecycle = () => {\n  const [count, setcount] = useState(0);\n  const [text, settext] = useState(\"\");\n\n  // Lifecycle 컴포넌트가 마운트됐을 때 -> 화면에 생겼을 때\n  useEffect(() => {\n    console.log(\"Mount!\");\n  }, []); // 의존성 배열에 빈 배열을 전달하면 마운트됐을 때 함수 실행 가능\n  return (\n    <div style={{ padding: 20 }}>\n      {count}\n      <button\n        onClick={() => {\n          setcount(count + 1);\n        }}\n      >\n        +\n      </button>\n      <button\n        onClick={() => {\n          setcount(count - 1);\n        }}\n      >\n        -\n      </button>\n      <div>\n        <input\n          value={text}\n          onChange={(e) => {\n            settext(e.target.value);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Lifecycle;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAD,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACR,oBACER,OAAA;IAAKS,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,GACzBR,KAAK,eACNH,OAAA;MACEY,OAAO,EAAEA,CAAA,KAAM;QACbR,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;MACrB,CAAE;MAAAQ,QAAA,EACH;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACThB,OAAA;MACEY,OAAO,EAAEA,CAAA,KAAM;QACbR,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;MACrB,CAAE;MAAAQ,QAAA,EACH;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACThB,OAAA;MAAAW,QAAA,eACEX,OAAA;QACEiB,KAAK,EAAEZ,IAAK;QACZa,QAAQ,EAAGC,CAAC,IAAK;UACfb,OAAO,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QACzB;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAnCID,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}